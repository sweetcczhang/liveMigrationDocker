/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_seccomp_2eproto__INCLUDED
#define PROTOBUF_C_seccomp_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _SeccompFilter SeccompFilter;
typedef struct _SeccompEntry SeccompEntry;


/* --- enums --- */


/* --- messages --- */

struct  _SeccompFilter
{
  ProtobufCMessage base;
  ProtobufCBinaryData filter;
  protobuf_c_boolean has_prev;
  uint32_t prev;
};
#define SECCOMP_FILTER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&seccomp_filter__descriptor) \
    , {0,NULL}, 0,0 }


struct  _SeccompEntry
{
  ProtobufCMessage base;
  size_t n_seccomp_filters;
  SeccompFilter **seccomp_filters;
};
#define SECCOMP_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&seccomp_entry__descriptor) \
    , 0,NULL }


/* SeccompFilter methods */
void   seccomp_filter__init
                     (SeccompFilter         *message);
size_t seccomp_filter__get_packed_size
                     (const SeccompFilter   *message);
size_t seccomp_filter__pack
                     (const SeccompFilter   *message,
                      uint8_t             *out);
size_t seccomp_filter__pack_to_buffer
                     (const SeccompFilter   *message,
                      ProtobufCBuffer     *buffer);
SeccompFilter *
       seccomp_filter__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   seccomp_filter__free_unpacked
                     (SeccompFilter *message,
                      ProtobufCAllocator *allocator);
/* SeccompEntry methods */
void   seccomp_entry__init
                     (SeccompEntry         *message);
size_t seccomp_entry__get_packed_size
                     (const SeccompEntry   *message);
size_t seccomp_entry__pack
                     (const SeccompEntry   *message,
                      uint8_t             *out);
size_t seccomp_entry__pack_to_buffer
                     (const SeccompEntry   *message,
                      ProtobufCBuffer     *buffer);
SeccompEntry *
       seccomp_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   seccomp_entry__free_unpacked
                     (SeccompEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SeccompFilter_Closure)
                 (const SeccompFilter *message,
                  void *closure_data);
typedef void (*SeccompEntry_Closure)
                 (const SeccompEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor seccomp_filter__descriptor;
extern const ProtobufCMessageDescriptor seccomp_entry__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_seccomp_2eproto__INCLUDED */
