/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_signalfd_2eproto__INCLUDED
#define PROTOBUF_C_signalfd_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "opts.pb-c.h"
#include "fown.pb-c.h"

typedef struct _SignalfdEntry SignalfdEntry;


/* --- enums --- */


/* --- messages --- */

struct  _SignalfdEntry
{
  ProtobufCMessage base;
  uint32_t id;
  uint32_t flags;
  FownEntry *fown;
  uint64_t sigmask;
};
#define SIGNALFD_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&signalfd_entry__descriptor) \
    , 0, 0, NULL, 0 }


/* SignalfdEntry methods */
void   signalfd_entry__init
                     (SignalfdEntry         *message);
size_t signalfd_entry__get_packed_size
                     (const SignalfdEntry   *message);
size_t signalfd_entry__pack
                     (const SignalfdEntry   *message,
                      uint8_t             *out);
size_t signalfd_entry__pack_to_buffer
                     (const SignalfdEntry   *message,
                      ProtobufCBuffer     *buffer);
SignalfdEntry *
       signalfd_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   signalfd_entry__free_unpacked
                     (SignalfdEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SignalfdEntry_Closure)
                 (const SignalfdEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor signalfd_entry__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_signalfd_2eproto__INCLUDED */
