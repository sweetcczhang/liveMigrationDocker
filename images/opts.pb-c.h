/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_opts_2eproto__INCLUDED
#define PROTOBUF_C_opts_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS

#include "google/protobuf/descriptor.pb-c.h"

typedef struct _CRIUOpts CRIUOpts;


/* --- enums --- */


/* --- messages --- */

struct  _CRIUOpts
{
  ProtobufCMessage base;
  protobuf_c_boolean has_hex;
  protobuf_c_boolean hex;
  protobuf_c_boolean has_ipadd;
  protobuf_c_boolean ipadd;
  char *flags;
  protobuf_c_boolean has_dev;
  protobuf_c_boolean dev;
  protobuf_c_boolean has_odev;
  protobuf_c_boolean odev;
};
#define CRIU__OPTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&criu__opts__descriptor) \
    , 0,0, 0,0, NULL, 0,0, 0,0 }


/* CRIUOpts methods */
void   criu__opts__init
                     (CRIUOpts         *message);
size_t criu__opts__get_packed_size
                     (const CRIUOpts   *message);
size_t criu__opts__pack
                     (const CRIUOpts   *message,
                      uint8_t             *out);
size_t criu__opts__pack_to_buffer
                     (const CRIUOpts   *message,
                      ProtobufCBuffer     *buffer);
CRIUOpts *
       criu__opts__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   criu__opts__free_unpacked
                     (CRIUOpts *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CRIUOpts_Closure)
                 (const CRIUOpts *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor criu__opts__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_opts_2eproto__INCLUDED */
